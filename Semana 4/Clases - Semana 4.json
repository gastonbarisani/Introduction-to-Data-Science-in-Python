{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Basical Statistical"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Vamos a utilizar conceptos de estadistica como prueba de hip√≥tesis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from scipy import stats "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>assignment1_grade</th>\n",
       "      <th>assignment1_submission</th>\n",
       "      <th>assignment2_grade</th>\n",
       "      <th>assignment2_submission</th>\n",
       "      <th>assignment3_grade</th>\n",
       "      <th>assignment3_submission</th>\n",
       "      <th>assignment4_grade</th>\n",
       "      <th>assignment4_submission</th>\n",
       "      <th>assignment5_grade</th>\n",
       "      <th>assignment5_submission</th>\n",
       "      <th>assignment6_grade</th>\n",
       "      <th>assignment6_submission</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B73F2C11-70F0-E37D-8B10-1D20AFED50B1</td>\n",
       "      <td>92.733946</td>\n",
       "      <td>2015-11-02 06:55:34.282000000</td>\n",
       "      <td>83.030552</td>\n",
       "      <td>2015-11-09 02:22:58.938000000</td>\n",
       "      <td>67.164441</td>\n",
       "      <td>2015-11-12 08:58:33.998000000</td>\n",
       "      <td>53.011553</td>\n",
       "      <td>2015-11-16 01:21:24.663000000</td>\n",
       "      <td>47.710398</td>\n",
       "      <td>2015-11-20 13:24:59.692000000</td>\n",
       "      <td>38.168318</td>\n",
       "      <td>2015-11-22 18:31:15.934000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>98A0FAE0-A19A-13D2-4BB5-CFBFD94031D1</td>\n",
       "      <td>86.790821</td>\n",
       "      <td>2015-11-29 14:57:44.429000000</td>\n",
       "      <td>86.290821</td>\n",
       "      <td>2015-12-06 17:41:18.449000000</td>\n",
       "      <td>69.772657</td>\n",
       "      <td>2015-12-10 08:54:55.904000000</td>\n",
       "      <td>55.098125</td>\n",
       "      <td>2015-12-13 17:32:30.941000000</td>\n",
       "      <td>49.588313</td>\n",
       "      <td>2015-12-19 23:26:39.285000000</td>\n",
       "      <td>44.629482</td>\n",
       "      <td>2015-12-21 17:07:24.275000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>D0F62040-CEB0-904C-F563-2F8620916C4E</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 05:36:02.389000000</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 06:39:44.416000000</td>\n",
       "      <td>68.410033</td>\n",
       "      <td>2016-01-15 20:22:45.882000000</td>\n",
       "      <td>54.728026</td>\n",
       "      <td>2016-01-11 12:41:50.749000000</td>\n",
       "      <td>49.255224</td>\n",
       "      <td>2016-01-11 17:31:12.489000000</td>\n",
       "      <td>44.329701</td>\n",
       "      <td>2016-01-17 16:24:42.765000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FFDF2B2C-F514-EF7F-6538-A6A53518E9DC</td>\n",
       "      <td>86.030665</td>\n",
       "      <td>2016-04-30 06:50:39.801000000</td>\n",
       "      <td>68.824532</td>\n",
       "      <td>2016-04-30 17:20:38.727000000</td>\n",
       "      <td>61.942079</td>\n",
       "      <td>2016-05-12 07:47:16.326000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-07 16:09:20.485000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-24 12:51:18.016000000</td>\n",
       "      <td>44.598297</td>\n",
       "      <td>2016-05-26 08:09:12.058000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5ECBEEB6-F1CE-80AE-3164-E45E99473FB4</td>\n",
       "      <td>64.813800</td>\n",
       "      <td>2015-12-13 17:06:10.750000000</td>\n",
       "      <td>51.491040</td>\n",
       "      <td>2015-12-14 12:25:12.056000000</td>\n",
       "      <td>41.932832</td>\n",
       "      <td>2015-12-29 14:25:22.594000000</td>\n",
       "      <td>36.929549</td>\n",
       "      <td>2015-12-28 01:29:55.901000000</td>\n",
       "      <td>33.236594</td>\n",
       "      <td>2015-12-29 14:46:06.628000000</td>\n",
       "      <td>33.236594</td>\n",
       "      <td>2016-01-05 01:06:59.546000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             student_id  assignment1_grade  \\\n",
       "0  B73F2C11-70F0-E37D-8B10-1D20AFED50B1          92.733946   \n",
       "1  98A0FAE0-A19A-13D2-4BB5-CFBFD94031D1          86.790821   \n",
       "2  D0F62040-CEB0-904C-F563-2F8620916C4E          85.512541   \n",
       "3  FFDF2B2C-F514-EF7F-6538-A6A53518E9DC          86.030665   \n",
       "4  5ECBEEB6-F1CE-80AE-3164-E45E99473FB4          64.813800   \n",
       "\n",
       "          assignment1_submission  assignment2_grade  \\\n",
       "0  2015-11-02 06:55:34.282000000          83.030552   \n",
       "1  2015-11-29 14:57:44.429000000          86.290821   \n",
       "2  2016-01-09 05:36:02.389000000          85.512541   \n",
       "3  2016-04-30 06:50:39.801000000          68.824532   \n",
       "4  2015-12-13 17:06:10.750000000          51.491040   \n",
       "\n",
       "          assignment2_submission  assignment3_grade  \\\n",
       "0  2015-11-09 02:22:58.938000000          67.164441   \n",
       "1  2015-12-06 17:41:18.449000000          69.772657   \n",
       "2  2016-01-09 06:39:44.416000000          68.410033   \n",
       "3  2016-04-30 17:20:38.727000000          61.942079   \n",
       "4  2015-12-14 12:25:12.056000000          41.932832   \n",
       "\n",
       "          assignment3_submission  assignment4_grade  \\\n",
       "0  2015-11-12 08:58:33.998000000          53.011553   \n",
       "1  2015-12-10 08:54:55.904000000          55.098125   \n",
       "2  2016-01-15 20:22:45.882000000          54.728026   \n",
       "3  2016-05-12 07:47:16.326000000          49.553663   \n",
       "4  2015-12-29 14:25:22.594000000          36.929549   \n",
       "\n",
       "          assignment4_submission  assignment5_grade  \\\n",
       "0  2015-11-16 01:21:24.663000000          47.710398   \n",
       "1  2015-12-13 17:32:30.941000000          49.588313   \n",
       "2  2016-01-11 12:41:50.749000000          49.255224   \n",
       "3  2016-05-07 16:09:20.485000000          49.553663   \n",
       "4  2015-12-28 01:29:55.901000000          33.236594   \n",
       "\n",
       "          assignment5_submission  assignment6_grade  \\\n",
       "0  2015-11-20 13:24:59.692000000          38.168318   \n",
       "1  2015-12-19 23:26:39.285000000          44.629482   \n",
       "2  2016-01-11 17:31:12.489000000          44.329701   \n",
       "3  2016-05-24 12:51:18.016000000          44.598297   \n",
       "4  2015-12-29 14:46:06.628000000          33.236594   \n",
       "\n",
       "          assignment6_submission  \n",
       "0  2015-11-22 18:31:15.934000000  \n",
       "1  2015-12-21 17:07:24.275000000  \n",
       "2  2016-01-17 16:24:42.765000000  \n",
       "3  2016-05-26 08:09:12.058000000  \n",
       "4  2016-01-05 01:06:59.546000000  "
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('grades.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>assignment1_grade</th>\n",
       "      <th>assignment1_submission</th>\n",
       "      <th>assignment2_grade</th>\n",
       "      <th>assignment2_submission</th>\n",
       "      <th>assignment3_grade</th>\n",
       "      <th>assignment3_submission</th>\n",
       "      <th>assignment4_grade</th>\n",
       "      <th>assignment4_submission</th>\n",
       "      <th>assignment5_grade</th>\n",
       "      <th>assignment5_submission</th>\n",
       "      <th>assignment6_grade</th>\n",
       "      <th>assignment6_submission</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>B73F2C11-70F0-E37D-8B10-1D20AFED50B1</td>\n",
       "      <td>92.733946</td>\n",
       "      <td>2015-11-02 06:55:34.282000000</td>\n",
       "      <td>83.030552</td>\n",
       "      <td>2015-11-09 02:22:58.938000000</td>\n",
       "      <td>67.164441</td>\n",
       "      <td>2015-11-12 08:58:33.998000000</td>\n",
       "      <td>53.011553</td>\n",
       "      <td>2015-11-16 01:21:24.663000000</td>\n",
       "      <td>47.710398</td>\n",
       "      <td>2015-11-20 13:24:59.692000000</td>\n",
       "      <td>38.168318</td>\n",
       "      <td>2015-11-22 18:31:15.934000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>98A0FAE0-A19A-13D2-4BB5-CFBFD94031D1</td>\n",
       "      <td>86.790821</td>\n",
       "      <td>2015-11-29 14:57:44.429000000</td>\n",
       "      <td>86.290821</td>\n",
       "      <td>2015-12-06 17:41:18.449000000</td>\n",
       "      <td>69.772657</td>\n",
       "      <td>2015-12-10 08:54:55.904000000</td>\n",
       "      <td>55.098125</td>\n",
       "      <td>2015-12-13 17:32:30.941000000</td>\n",
       "      <td>49.588313</td>\n",
       "      <td>2015-12-19 23:26:39.285000000</td>\n",
       "      <td>44.629482</td>\n",
       "      <td>2015-12-21 17:07:24.275000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5ECBEEB6-F1CE-80AE-3164-E45E99473FB4</td>\n",
       "      <td>64.813800</td>\n",
       "      <td>2015-12-13 17:06:10.750000000</td>\n",
       "      <td>51.491040</td>\n",
       "      <td>2015-12-14 12:25:12.056000000</td>\n",
       "      <td>41.932832</td>\n",
       "      <td>2015-12-29 14:25:22.594000000</td>\n",
       "      <td>36.929549</td>\n",
       "      <td>2015-12-28 01:29:55.901000000</td>\n",
       "      <td>33.236594</td>\n",
       "      <td>2015-12-29 14:46:06.628000000</td>\n",
       "      <td>33.236594</td>\n",
       "      <td>2016-01-05 01:06:59.546000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>D09000A0-827B-C0FF-3433-BF8FF286E15B</td>\n",
       "      <td>71.647278</td>\n",
       "      <td>2015-12-28 04:35:32.836000000</td>\n",
       "      <td>64.052550</td>\n",
       "      <td>2016-01-03 21:05:38.392000000</td>\n",
       "      <td>64.752550</td>\n",
       "      <td>2016-01-07 08:55:43.692000000</td>\n",
       "      <td>57.467295</td>\n",
       "      <td>2016-01-11 00:45:28.706000000</td>\n",
       "      <td>57.467295</td>\n",
       "      <td>2016-01-11 00:54:13.579000000</td>\n",
       "      <td>57.467295</td>\n",
       "      <td>2016-01-20 19:54:46.166000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>C9D51293-BD58-F113-4167-A7C0BAFCB6E5</td>\n",
       "      <td>66.595568</td>\n",
       "      <td>2015-12-25 02:29:28.415000000</td>\n",
       "      <td>52.916454</td>\n",
       "      <td>2015-12-31 01:42:30.046000000</td>\n",
       "      <td>48.344809</td>\n",
       "      <td>2016-01-05 23:34:02.180000000</td>\n",
       "      <td>47.444809</td>\n",
       "      <td>2016-01-02 07:48:42.517000000</td>\n",
       "      <td>37.955847</td>\n",
       "      <td>2016-01-03 21:27:04.266000000</td>\n",
       "      <td>37.955847</td>\n",
       "      <td>2016-01-19 15:24:31.060000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             student_id  assignment1_grade  \\\n",
       "0  B73F2C11-70F0-E37D-8B10-1D20AFED50B1          92.733946   \n",
       "1  98A0FAE0-A19A-13D2-4BB5-CFBFD94031D1          86.790821   \n",
       "4  5ECBEEB6-F1CE-80AE-3164-E45E99473FB4          64.813800   \n",
       "5  D09000A0-827B-C0FF-3433-BF8FF286E15B          71.647278   \n",
       "8  C9D51293-BD58-F113-4167-A7C0BAFCB6E5          66.595568   \n",
       "\n",
       "          assignment1_submission  assignment2_grade  \\\n",
       "0  2015-11-02 06:55:34.282000000          83.030552   \n",
       "1  2015-11-29 14:57:44.429000000          86.290821   \n",
       "4  2015-12-13 17:06:10.750000000          51.491040   \n",
       "5  2015-12-28 04:35:32.836000000          64.052550   \n",
       "8  2015-12-25 02:29:28.415000000          52.916454   \n",
       "\n",
       "          assignment2_submission  assignment3_grade  \\\n",
       "0  2015-11-09 02:22:58.938000000          67.164441   \n",
       "1  2015-12-06 17:41:18.449000000          69.772657   \n",
       "4  2015-12-14 12:25:12.056000000          41.932832   \n",
       "5  2016-01-03 21:05:38.392000000          64.752550   \n",
       "8  2015-12-31 01:42:30.046000000          48.344809   \n",
       "\n",
       "          assignment3_submission  assignment4_grade  \\\n",
       "0  2015-11-12 08:58:33.998000000          53.011553   \n",
       "1  2015-12-10 08:54:55.904000000          55.098125   \n",
       "4  2015-12-29 14:25:22.594000000          36.929549   \n",
       "5  2016-01-07 08:55:43.692000000          57.467295   \n",
       "8  2016-01-05 23:34:02.180000000          47.444809   \n",
       "\n",
       "          assignment4_submission  assignment5_grade  \\\n",
       "0  2015-11-16 01:21:24.663000000          47.710398   \n",
       "1  2015-12-13 17:32:30.941000000          49.588313   \n",
       "4  2015-12-28 01:29:55.901000000          33.236594   \n",
       "5  2016-01-11 00:45:28.706000000          57.467295   \n",
       "8  2016-01-02 07:48:42.517000000          37.955847   \n",
       "\n",
       "          assignment5_submission  assignment6_grade  \\\n",
       "0  2015-11-20 13:24:59.692000000          38.168318   \n",
       "1  2015-12-19 23:26:39.285000000          44.629482   \n",
       "4  2015-12-29 14:46:06.628000000          33.236594   \n",
       "5  2016-01-11 00:54:13.579000000          57.467295   \n",
       "8  2016-01-03 21:27:04.266000000          37.955847   \n",
       "\n",
       "          assignment6_submission  \n",
       "0  2015-11-22 18:31:15.934000000  \n",
       "1  2015-12-21 17:07:24.275000000  \n",
       "4  2016-01-05 01:06:59.546000000  \n",
       "5  2016-01-20 19:54:46.166000000  \n",
       "8  2016-01-19 15:24:31.060000000  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#vamos a dividir en dos grupos: los que terminaron la materia 1 antes de diciembre de 2015 y los que terminaron despues:\n",
    "\n",
    "early_finishers = df[pd.to_datetime(df['assignment1_submission']) < '2016']\n",
    "early_finishers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>assignment1_grade</th>\n",
       "      <th>assignment1_submission</th>\n",
       "      <th>assignment2_grade</th>\n",
       "      <th>assignment2_submission</th>\n",
       "      <th>assignment3_grade</th>\n",
       "      <th>assignment3_submission</th>\n",
       "      <th>assignment4_grade</th>\n",
       "      <th>assignment4_submission</th>\n",
       "      <th>assignment5_grade</th>\n",
       "      <th>assignment5_submission</th>\n",
       "      <th>assignment6_grade</th>\n",
       "      <th>assignment6_submission</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>D0F62040-CEB0-904C-F563-2F8620916C4E</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 05:36:02.389000000</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 06:39:44.416000000</td>\n",
       "      <td>68.410033</td>\n",
       "      <td>2016-01-15 20:22:45.882000000</td>\n",
       "      <td>54.728026</td>\n",
       "      <td>2016-01-11 12:41:50.749000000</td>\n",
       "      <td>49.255224</td>\n",
       "      <td>2016-01-11 17:31:12.489000000</td>\n",
       "      <td>44.329701</td>\n",
       "      <td>2016-01-17 16:24:42.765000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FFDF2B2C-F514-EF7F-6538-A6A53518E9DC</td>\n",
       "      <td>86.030665</td>\n",
       "      <td>2016-04-30 06:50:39.801000000</td>\n",
       "      <td>68.824532</td>\n",
       "      <td>2016-04-30 17:20:38.727000000</td>\n",
       "      <td>61.942079</td>\n",
       "      <td>2016-05-12 07:47:16.326000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-07 16:09:20.485000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-24 12:51:18.016000000</td>\n",
       "      <td>44.598297</td>\n",
       "      <td>2016-05-26 08:09:12.058000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3217BE3F-E4B0-C3B6-9F64-462456819CE4</td>\n",
       "      <td>87.498744</td>\n",
       "      <td>2016-03-05 11:05:25.408000000</td>\n",
       "      <td>69.998995</td>\n",
       "      <td>2016-03-09 07:29:52.405000000</td>\n",
       "      <td>55.999196</td>\n",
       "      <td>2016-03-16 22:31:24.316000000</td>\n",
       "      <td>50.399276</td>\n",
       "      <td>2016-03-18 07:19:26.032000000</td>\n",
       "      <td>45.359349</td>\n",
       "      <td>2016-03-19 10:35:41.869000000</td>\n",
       "      <td>45.359349</td>\n",
       "      <td>2016-03-23 14:02:00.987000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>F1CB5AA1-B3DE-5460-FAFF-BE951FD38B5F</td>\n",
       "      <td>80.576090</td>\n",
       "      <td>2016-01-24 18:24:25.619000000</td>\n",
       "      <td>72.518481</td>\n",
       "      <td>2016-01-27 13:37:12.943000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-01-30 14:34:36.581000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-03 22:08:49.002000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-16 14:22:23.664000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-18 08:35:04.796000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>E2C617C2-4654-622C-AB50-1550C4BE42A0</td>\n",
       "      <td>59.270882</td>\n",
       "      <td>2016-03-06 12:06:26.185000000</td>\n",
       "      <td>59.270882</td>\n",
       "      <td>2016-03-13 02:07:25.289000000</td>\n",
       "      <td>53.343794</td>\n",
       "      <td>2016-03-17 07:30:09.241000000</td>\n",
       "      <td>53.343794</td>\n",
       "      <td>2016-03-20 21:45:56.229000000</td>\n",
       "      <td>42.675035</td>\n",
       "      <td>2016-03-27 15:55:04.414000000</td>\n",
       "      <td>38.407532</td>\n",
       "      <td>2016-03-30 20:33:13.554000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             student_id  assignment1_grade  \\\n",
       "2  D0F62040-CEB0-904C-F563-2F8620916C4E          85.512541   \n",
       "3  FFDF2B2C-F514-EF7F-6538-A6A53518E9DC          86.030665   \n",
       "6  3217BE3F-E4B0-C3B6-9F64-462456819CE4          87.498744   \n",
       "7  F1CB5AA1-B3DE-5460-FAFF-BE951FD38B5F          80.576090   \n",
       "9  E2C617C2-4654-622C-AB50-1550C4BE42A0          59.270882   \n",
       "\n",
       "          assignment1_submission  assignment2_grade  \\\n",
       "2  2016-01-09 05:36:02.389000000          85.512541   \n",
       "3  2016-04-30 06:50:39.801000000          68.824532   \n",
       "6  2016-03-05 11:05:25.408000000          69.998995   \n",
       "7  2016-01-24 18:24:25.619000000          72.518481   \n",
       "9  2016-03-06 12:06:26.185000000          59.270882   \n",
       "\n",
       "          assignment2_submission  assignment3_grade  \\\n",
       "2  2016-01-09 06:39:44.416000000          68.410033   \n",
       "3  2016-04-30 17:20:38.727000000          61.942079   \n",
       "6  2016-03-09 07:29:52.405000000          55.999196   \n",
       "7  2016-01-27 13:37:12.943000000          65.266633   \n",
       "9  2016-03-13 02:07:25.289000000          53.343794   \n",
       "\n",
       "          assignment3_submission  assignment4_grade  \\\n",
       "2  2016-01-15 20:22:45.882000000          54.728026   \n",
       "3  2016-05-12 07:47:16.326000000          49.553663   \n",
       "6  2016-03-16 22:31:24.316000000          50.399276   \n",
       "7  2016-01-30 14:34:36.581000000          65.266633   \n",
       "9  2016-03-17 07:30:09.241000000          53.343794   \n",
       "\n",
       "          assignment4_submission  assignment5_grade  \\\n",
       "2  2016-01-11 12:41:50.749000000          49.255224   \n",
       "3  2016-05-07 16:09:20.485000000          49.553663   \n",
       "6  2016-03-18 07:19:26.032000000          45.359349   \n",
       "7  2016-02-03 22:08:49.002000000          65.266633   \n",
       "9  2016-03-20 21:45:56.229000000          42.675035   \n",
       "\n",
       "          assignment5_submission  assignment6_grade  \\\n",
       "2  2016-01-11 17:31:12.489000000          44.329701   \n",
       "3  2016-05-24 12:51:18.016000000          44.598297   \n",
       "6  2016-03-19 10:35:41.869000000          45.359349   \n",
       "7  2016-02-16 14:22:23.664000000          65.266633   \n",
       "9  2016-03-27 15:55:04.414000000          38.407532   \n",
       "\n",
       "          assignment6_submission  \n",
       "2  2016-01-17 16:24:42.765000000  \n",
       "3  2016-05-26 08:09:12.058000000  \n",
       "6  2016-03-23 14:02:00.987000000  \n",
       "7  2016-02-18 08:35:04.796000000  \n",
       "9  2016-03-30 20:33:13.554000000  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "late_finishers = df[pd.to_datetime(df['assignment1_submission']) >= '2016']\n",
    "late_finishers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>assignment1_grade</th>\n",
       "      <th>assignment1_submission</th>\n",
       "      <th>assignment2_grade</th>\n",
       "      <th>assignment2_submission</th>\n",
       "      <th>assignment3_grade</th>\n",
       "      <th>assignment3_submission</th>\n",
       "      <th>assignment4_grade</th>\n",
       "      <th>assignment4_submission</th>\n",
       "      <th>assignment5_grade</th>\n",
       "      <th>assignment5_submission</th>\n",
       "      <th>assignment6_grade</th>\n",
       "      <th>assignment6_submission</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>D0F62040-CEB0-904C-F563-2F8620916C4E</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 05:36:02.389000000</td>\n",
       "      <td>85.512541</td>\n",
       "      <td>2016-01-09 06:39:44.416000000</td>\n",
       "      <td>68.410033</td>\n",
       "      <td>2016-01-15 20:22:45.882000000</td>\n",
       "      <td>54.728026</td>\n",
       "      <td>2016-01-11 12:41:50.749000000</td>\n",
       "      <td>49.255224</td>\n",
       "      <td>2016-01-11 17:31:12.489000000</td>\n",
       "      <td>44.329701</td>\n",
       "      <td>2016-01-17 16:24:42.765000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FFDF2B2C-F514-EF7F-6538-A6A53518E9DC</td>\n",
       "      <td>86.030665</td>\n",
       "      <td>2016-04-30 06:50:39.801000000</td>\n",
       "      <td>68.824532</td>\n",
       "      <td>2016-04-30 17:20:38.727000000</td>\n",
       "      <td>61.942079</td>\n",
       "      <td>2016-05-12 07:47:16.326000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-07 16:09:20.485000000</td>\n",
       "      <td>49.553663</td>\n",
       "      <td>2016-05-24 12:51:18.016000000</td>\n",
       "      <td>44.598297</td>\n",
       "      <td>2016-05-26 08:09:12.058000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3217BE3F-E4B0-C3B6-9F64-462456819CE4</td>\n",
       "      <td>87.498744</td>\n",
       "      <td>2016-03-05 11:05:25.408000000</td>\n",
       "      <td>69.998995</td>\n",
       "      <td>2016-03-09 07:29:52.405000000</td>\n",
       "      <td>55.999196</td>\n",
       "      <td>2016-03-16 22:31:24.316000000</td>\n",
       "      <td>50.399276</td>\n",
       "      <td>2016-03-18 07:19:26.032000000</td>\n",
       "      <td>45.359349</td>\n",
       "      <td>2016-03-19 10:35:41.869000000</td>\n",
       "      <td>45.359349</td>\n",
       "      <td>2016-03-23 14:02:00.987000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>F1CB5AA1-B3DE-5460-FAFF-BE951FD38B5F</td>\n",
       "      <td>80.576090</td>\n",
       "      <td>2016-01-24 18:24:25.619000000</td>\n",
       "      <td>72.518481</td>\n",
       "      <td>2016-01-27 13:37:12.943000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-01-30 14:34:36.581000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-03 22:08:49.002000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-16 14:22:23.664000000</td>\n",
       "      <td>65.266633</td>\n",
       "      <td>2016-02-18 08:35:04.796000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>E2C617C2-4654-622C-AB50-1550C4BE42A0</td>\n",
       "      <td>59.270882</td>\n",
       "      <td>2016-03-06 12:06:26.185000000</td>\n",
       "      <td>59.270882</td>\n",
       "      <td>2016-03-13 02:07:25.289000000</td>\n",
       "      <td>53.343794</td>\n",
       "      <td>2016-03-17 07:30:09.241000000</td>\n",
       "      <td>53.343794</td>\n",
       "      <td>2016-03-20 21:45:56.229000000</td>\n",
       "      <td>42.675035</td>\n",
       "      <td>2016-03-27 15:55:04.414000000</td>\n",
       "      <td>38.407532</td>\n",
       "      <td>2016-03-30 20:33:13.554000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             student_id  assignment1_grade  \\\n",
       "2  D0F62040-CEB0-904C-F563-2F8620916C4E          85.512541   \n",
       "3  FFDF2B2C-F514-EF7F-6538-A6A53518E9DC          86.030665   \n",
       "6  3217BE3F-E4B0-C3B6-9F64-462456819CE4          87.498744   \n",
       "7  F1CB5AA1-B3DE-5460-FAFF-BE951FD38B5F          80.576090   \n",
       "9  E2C617C2-4654-622C-AB50-1550C4BE42A0          59.270882   \n",
       "\n",
       "          assignment1_submission  assignment2_grade  \\\n",
       "2  2016-01-09 05:36:02.389000000          85.512541   \n",
       "3  2016-04-30 06:50:39.801000000          68.824532   \n",
       "6  2016-03-05 11:05:25.408000000          69.998995   \n",
       "7  2016-01-24 18:24:25.619000000          72.518481   \n",
       "9  2016-03-06 12:06:26.185000000          59.270882   \n",
       "\n",
       "          assignment2_submission  assignment3_grade  \\\n",
       "2  2016-01-09 06:39:44.416000000          68.410033   \n",
       "3  2016-04-30 17:20:38.727000000          61.942079   \n",
       "6  2016-03-09 07:29:52.405000000          55.999196   \n",
       "7  2016-01-27 13:37:12.943000000          65.266633   \n",
       "9  2016-03-13 02:07:25.289000000          53.343794   \n",
       "\n",
       "          assignment3_submission  assignment4_grade  \\\n",
       "2  2016-01-15 20:22:45.882000000          54.728026   \n",
       "3  2016-05-12 07:47:16.326000000          49.553663   \n",
       "6  2016-03-16 22:31:24.316000000          50.399276   \n",
       "7  2016-01-30 14:34:36.581000000          65.266633   \n",
       "9  2016-03-17 07:30:09.241000000          53.343794   \n",
       "\n",
       "          assignment4_submission  assignment5_grade  \\\n",
       "2  2016-01-11 12:41:50.749000000          49.255224   \n",
       "3  2016-05-07 16:09:20.485000000          49.553663   \n",
       "6  2016-03-18 07:19:26.032000000          45.359349   \n",
       "7  2016-02-03 22:08:49.002000000          65.266633   \n",
       "9  2016-03-20 21:45:56.229000000          42.675035   \n",
       "\n",
       "          assignment5_submission  assignment6_grade  \\\n",
       "2  2016-01-11 17:31:12.489000000          44.329701   \n",
       "3  2016-05-24 12:51:18.016000000          44.598297   \n",
       "6  2016-03-19 10:35:41.869000000          45.359349   \n",
       "7  2016-02-16 14:22:23.664000000          65.266633   \n",
       "9  2016-03-27 15:55:04.414000000          38.407532   \n",
       "\n",
       "          assignment6_submission  \n",
       "2  2016-01-17 16:24:42.765000000  \n",
       "3  2016-05-26 08:09:12.058000000  \n",
       "6  2016-03-23 14:02:00.987000000  \n",
       "7  2016-02-18 08:35:04.796000000  \n",
       "9  2016-03-30 20:33:13.554000000  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#otra manera de hacer late_finishers:\n",
    "\n",
    "late_finishers = df[~df.index.isin(early_finishers.index)] #le estoy diciendo que quiero todo lo que no esta en early\n",
    "late_finishers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "74.94728457024303\n",
      "74.0450648477065\n"
     ]
    }
   ],
   "source": [
    "#vamos a calcular la media para los grupos formados:\n",
    "\n",
    "print(early_finishers['assignment1_grade'].mean())\n",
    "print(late_finishers['assignment1_grade'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ttest_indResult(statistic=1.322354085372139, pvalue=0.1861810110171455)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#vamos a utilizar la libreria SciPy para hacer test de hipotesis\n",
    "#alfa es el nivel de significacion o de confianza (el error que estoy dispuesto a aceptar), en este caso adoptamos 0.05\n",
    "#p-valor: es la probabilidad de que la hipootesis nula sea verdadera\n",
    "#hipotesis nula: las notas son iguales\n",
    "#hipotesis alternativa: las notas son distintas\n",
    "\n",
    "from scipy.stats import ttest_ind\n",
    "\n",
    "ttest_ind(early_finishers['assignment1_grade'], late_finishers['assignment1_grade'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#podemos ver que p-valor es 0.18 (mayor que alfa). Por lo tanto esto significa que no podemos rechazar la hipotesis nula,\n",
    "#es decir que segun la evidencia que tenemos las notas son iguales.\n",
    "#Ahora vamos a chequear con otras materias:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ttest_indResult(statistic=1.2514717608216366, pvalue=0.2108889627004424)\n",
      "Ttest_indResult(statistic=1.6133726558705392, pvalue=0.10679998102227865)\n",
      "Ttest_indResult(statistic=0.049671157386456125, pvalue=0.960388729789337)\n",
      "Ttest_indResult(statistic=-0.05279315545404755, pvalue=0.9579012739746492)\n",
      "Ttest_indResult(statistic=-0.11609743352612056, pvalue=0.9075854011989656)\n"
     ]
    }
   ],
   "source": [
    "print(ttest_ind(early_finishers['assignment2_grade'], late_finishers['assignment2_grade']))\n",
    "print(ttest_ind(early_finishers['assignment3_grade'], late_finishers['assignment3_grade']))\n",
    "print(ttest_ind(early_finishers['assignment4_grade'], late_finishers['assignment4_grade']))\n",
    "print(ttest_ind(early_finishers['assignment5_grade'], late_finishers['assignment5_grade']))\n",
    "print(ttest_ind(early_finishers['assignment6_grade'], late_finishers['assignment6_grade']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#en esta data no hay evidencia para decir que las notas son diferentes. Como analista, hay que investigar m√°s sobre la materia3\n",
    "# ya que tiene un p-valor de 0.1. Esto puede ser por pocos participantes o por algo unico del curso."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>90</th>\n",
       "      <th>91</th>\n",
       "      <th>92</th>\n",
       "      <th>93</th>\n",
       "      <th>94</th>\n",
       "      <th>95</th>\n",
       "      <th>96</th>\n",
       "      <th>97</th>\n",
       "      <th>98</th>\n",
       "      <th>99</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.235315</td>\n",
       "      <td>0.865727</td>\n",
       "      <td>0.229445</td>\n",
       "      <td>0.505576</td>\n",
       "      <td>0.497508</td>\n",
       "      <td>0.856427</td>\n",
       "      <td>0.632166</td>\n",
       "      <td>0.397486</td>\n",
       "      <td>0.369785</td>\n",
       "      <td>0.846677</td>\n",
       "      <td>...</td>\n",
       "      <td>0.235239</td>\n",
       "      <td>0.402434</td>\n",
       "      <td>0.997620</td>\n",
       "      <td>0.091872</td>\n",
       "      <td>0.007479</td>\n",
       "      <td>0.073533</td>\n",
       "      <td>0.813997</td>\n",
       "      <td>0.174193</td>\n",
       "      <td>0.193754</td>\n",
       "      <td>0.645956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.323391</td>\n",
       "      <td>0.519747</td>\n",
       "      <td>0.305150</td>\n",
       "      <td>0.399421</td>\n",
       "      <td>0.106721</td>\n",
       "      <td>0.017815</td>\n",
       "      <td>0.657897</td>\n",
       "      <td>0.904126</td>\n",
       "      <td>0.521485</td>\n",
       "      <td>0.738789</td>\n",
       "      <td>...</td>\n",
       "      <td>0.713988</td>\n",
       "      <td>0.630668</td>\n",
       "      <td>0.172573</td>\n",
       "      <td>0.541846</td>\n",
       "      <td>0.051981</td>\n",
       "      <td>0.230362</td>\n",
       "      <td>0.062533</td>\n",
       "      <td>0.037113</td>\n",
       "      <td>0.817699</td>\n",
       "      <td>0.426128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.093247</td>\n",
       "      <td>0.962076</td>\n",
       "      <td>0.064608</td>\n",
       "      <td>0.570445</td>\n",
       "      <td>0.342470</td>\n",
       "      <td>0.012256</td>\n",
       "      <td>0.235565</td>\n",
       "      <td>0.924496</td>\n",
       "      <td>0.673888</td>\n",
       "      <td>0.566631</td>\n",
       "      <td>...</td>\n",
       "      <td>0.487879</td>\n",
       "      <td>0.746764</td>\n",
       "      <td>0.025636</td>\n",
       "      <td>0.683120</td>\n",
       "      <td>0.090312</td>\n",
       "      <td>0.188465</td>\n",
       "      <td>0.429843</td>\n",
       "      <td>0.639126</td>\n",
       "      <td>0.883251</td>\n",
       "      <td>0.853001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.265882</td>\n",
       "      <td>0.611311</td>\n",
       "      <td>0.023636</td>\n",
       "      <td>0.234934</td>\n",
       "      <td>0.843192</td>\n",
       "      <td>0.720463</td>\n",
       "      <td>0.312731</td>\n",
       "      <td>0.283801</td>\n",
       "      <td>0.871774</td>\n",
       "      <td>0.594185</td>\n",
       "      <td>...</td>\n",
       "      <td>0.445531</td>\n",
       "      <td>0.589198</td>\n",
       "      <td>0.708959</td>\n",
       "      <td>0.563728</td>\n",
       "      <td>0.911034</td>\n",
       "      <td>0.966791</td>\n",
       "      <td>0.506432</td>\n",
       "      <td>0.575089</td>\n",
       "      <td>0.629220</td>\n",
       "      <td>0.637827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.651452</td>\n",
       "      <td>0.872515</td>\n",
       "      <td>0.615094</td>\n",
       "      <td>0.894787</td>\n",
       "      <td>0.825892</td>\n",
       "      <td>0.858519</td>\n",
       "      <td>0.833000</td>\n",
       "      <td>0.980519</td>\n",
       "      <td>0.225891</td>\n",
       "      <td>0.799765</td>\n",
       "      <td>...</td>\n",
       "      <td>0.930239</td>\n",
       "      <td>0.169294</td>\n",
       "      <td>0.428371</td>\n",
       "      <td>0.693672</td>\n",
       "      <td>0.095203</td>\n",
       "      <td>0.105936</td>\n",
       "      <td>0.621499</td>\n",
       "      <td>0.028379</td>\n",
       "      <td>0.601181</td>\n",
       "      <td>0.660641</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows √ó 100 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         0         1         2         3         4         5         6   \\\n",
       "0  0.235315  0.865727  0.229445  0.505576  0.497508  0.856427  0.632166   \n",
       "1  0.323391  0.519747  0.305150  0.399421  0.106721  0.017815  0.657897   \n",
       "2  0.093247  0.962076  0.064608  0.570445  0.342470  0.012256  0.235565   \n",
       "3  0.265882  0.611311  0.023636  0.234934  0.843192  0.720463  0.312731   \n",
       "4  0.651452  0.872515  0.615094  0.894787  0.825892  0.858519  0.833000   \n",
       "\n",
       "         7         8         9   ...        90        91        92        93  \\\n",
       "0  0.397486  0.369785  0.846677  ...  0.235239  0.402434  0.997620  0.091872   \n",
       "1  0.904126  0.521485  0.738789  ...  0.713988  0.630668  0.172573  0.541846   \n",
       "2  0.924496  0.673888  0.566631  ...  0.487879  0.746764  0.025636  0.683120   \n",
       "3  0.283801  0.871774  0.594185  ...  0.445531  0.589198  0.708959  0.563728   \n",
       "4  0.980519  0.225891  0.799765  ...  0.930239  0.169294  0.428371  0.693672   \n",
       "\n",
       "         94        95        96        97        98        99  \n",
       "0  0.007479  0.073533  0.813997  0.174193  0.193754  0.645956  \n",
       "1  0.051981  0.230362  0.062533  0.037113  0.817699  0.426128  \n",
       "2  0.090312  0.188465  0.429843  0.639126  0.883251  0.853001  \n",
       "3  0.911034  0.966791  0.506432  0.575089  0.629220  0.637827  \n",
       "4  0.095203  0.105936  0.621499  0.028379  0.601181  0.660641  \n",
       "\n",
       "[5 rows x 100 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#al ser insuficientes, se estan reemplazando los test de hipotesis por intervalos de confianza o analisis de bayes.\n",
    "#vamos a ver una simulacion de esto:\n",
    "\n",
    "df1 = pd.DataFrame([np.random.random(100) for x in range (100)]) #creo df1\n",
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.DataFrame([np.random.random(100) for x in range (100)]) #creo df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#son estos dos df iguales? vamos a crear una funcion para comparar columna por columna entre ambos df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La columna 4 es estadisticamente diferente para alfa=0.1 y p-valor=0.040804910180119724\n",
      "La columna 19 es estadisticamente diferente para alfa=0.1 y p-valor=0.06003893875945721\n",
      "La columna 35 es estadisticamente diferente para alfa=0.1 y p-valor=0.03627638663866923\n",
      "La columna 62 es estadisticamente diferente para alfa=0.1 y p-valor=0.010588283504909046\n",
      "La columna 72 es estadisticamente diferente para alfa=0.1 y p-valor=0.05571004246427579\n",
      "La columna 78 es estadisticamente diferente para alfa=0.1 y p-valor=0.07485714786143179\n",
      "El total de columnas diferentes es 6, que es un 6.0%.\n"
     ]
    }
   ],
   "source": [
    "def test_columns(alpha=0.1):\n",
    "    num_dif = 0 #contador\n",
    "    for col in df1.columns: #recorro las columnas del df1\n",
    "        teststat, pval = ttest_ind(df1[col], df2[col]) #hago test\n",
    "        if pval <= alpha: #si el p-valor es menor que alfa entonces se debe aceptar la hipotesis alternativa \n",
    "            print('La columna {} es estadisticamente diferente para alfa={} y p-valor={}'.format(col, alpha, pval))\n",
    "            num_dif = num_dif + 1 #aumento contador\n",
    "    print('El total de columnas diferentes es {}, que es un {}%.'.format(num_dif, float(num_dif)/len(df1.columns)*100))\n",
    "\n",
    "test_columns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La columna 4 es estadisticamente diferente para alfa=0.05 y p-valor=0.040804910180119724\n",
      "La columna 35 es estadisticamente diferente para alfa=0.05 y p-valor=0.03627638663866923\n",
      "La columna 62 es estadisticamente diferente para alfa=0.05 y p-valor=0.010588283504909046\n",
      "El total de columnas diferentes es 3, que es un 3.0%.\n"
     ]
    }
   ],
   "source": [
    "test_columns(0.05)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "#siempre se debe tener en cuenta el valor de alfa para el analisis, y depender√° de cada caso cual tomar."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La columna 0 es estadisticamente diferente para alfa=0.1 y p-valor=0.0003243387492409425\n",
      "La columna 1 es estadisticamente diferente para alfa=0.1 y p-valor=8.201957372826176e-05\n",
      "La columna 2 es estadisticamente diferente para alfa=0.1 y p-valor=0.00453097205611213\n",
      "La columna 3 es estadisticamente diferente para alfa=0.1 y p-valor=0.03013242702312555\n",
      "La columna 4 es estadisticamente diferente para alfa=0.1 y p-valor=0.0007204861204224606\n",
      "La columna 5 es estadisticamente diferente para alfa=0.1 y p-valor=0.00019034534251848143\n",
      "La columna 6 es estadisticamente diferente para alfa=0.1 y p-valor=8.501900425068969e-06\n",
      "La columna 7 es estadisticamente diferente para alfa=0.1 y p-valor=0.0014066919836154394\n",
      "La columna 8 es estadisticamente diferente para alfa=0.1 y p-valor=0.000486299132426987\n",
      "La columna 9 es estadisticamente diferente para alfa=0.1 y p-valor=0.00010679659312160572\n",
      "La columna 10 es estadisticamente diferente para alfa=0.1 y p-valor=0.0005813621013618975\n",
      "La columna 11 es estadisticamente diferente para alfa=0.1 y p-valor=0.025699296596404037\n",
      "La columna 12 es estadisticamente diferente para alfa=0.1 y p-valor=0.0021589790894650383\n",
      "La columna 13 es estadisticamente diferente para alfa=0.1 y p-valor=0.00033996173869926415\n",
      "La columna 14 es estadisticamente diferente para alfa=0.1 y p-valor=2.3651042177707823e-05\n",
      "La columna 15 es estadisticamente diferente para alfa=0.1 y p-valor=0.0005743521143271199\n",
      "La columna 16 es estadisticamente diferente para alfa=0.1 y p-valor=0.00014161713517214913\n",
      "La columna 17 es estadisticamente diferente para alfa=0.1 y p-valor=0.0045923637591393784\n",
      "La columna 18 es estadisticamente diferente para alfa=0.1 y p-valor=0.008209581676431574\n",
      "La columna 19 es estadisticamente diferente para alfa=0.1 y p-valor=0.00032025479347360026\n",
      "La columna 20 es estadisticamente diferente para alfa=0.1 y p-valor=0.048648507209462934\n",
      "La columna 21 es estadisticamente diferente para alfa=0.1 y p-valor=0.00011343803634162933\n",
      "La columna 22 es estadisticamente diferente para alfa=0.1 y p-valor=0.0001835667842267419\n",
      "La columna 23 es estadisticamente diferente para alfa=0.1 y p-valor=0.0020501734816585886\n",
      "La columna 24 es estadisticamente diferente para alfa=0.1 y p-valor=0.00013698815655173487\n",
      "La columna 25 es estadisticamente diferente para alfa=0.1 y p-valor=5.260470223873605e-06\n",
      "La columna 26 es estadisticamente diferente para alfa=0.1 y p-valor=0.004235803799653742\n",
      "La columna 27 es estadisticamente diferente para alfa=0.1 y p-valor=0.0013575364673126995\n",
      "La columna 28 es estadisticamente diferente para alfa=0.1 y p-valor=0.0011909237474932092\n",
      "La columna 29 es estadisticamente diferente para alfa=0.1 y p-valor=0.0004361615673183277\n",
      "La columna 30 es estadisticamente diferente para alfa=0.1 y p-valor=0.0003502413208350381\n",
      "La columna 31 es estadisticamente diferente para alfa=0.1 y p-valor=0.03109614205086666\n",
      "La columna 32 es estadisticamente diferente para alfa=0.1 y p-valor=0.0020771953639266813\n",
      "La columna 33 es estadisticamente diferente para alfa=0.1 y p-valor=0.034844844772339324\n",
      "La columna 34 es estadisticamente diferente para alfa=0.1 y p-valor=0.0002509438760305707\n",
      "La columna 35 es estadisticamente diferente para alfa=0.1 y p-valor=0.07814300233559522\n",
      "La columna 36 es estadisticamente diferente para alfa=0.1 y p-valor=0.0003771586520790147\n",
      "La columna 37 es estadisticamente diferente para alfa=0.1 y p-valor=7.40451908063857e-05\n",
      "La columna 38 es estadisticamente diferente para alfa=0.1 y p-valor=0.00018708254264869593\n",
      "La columna 39 es estadisticamente diferente para alfa=0.1 y p-valor=8.930969519708947e-07\n",
      "La columna 40 es estadisticamente diferente para alfa=0.1 y p-valor=0.0020769886737103875\n",
      "La columna 41 es estadisticamente diferente para alfa=0.1 y p-valor=0.00036080011926563094\n",
      "La columna 42 es estadisticamente diferente para alfa=0.1 y p-valor=0.000504201897056923\n",
      "La columna 43 es estadisticamente diferente para alfa=0.1 y p-valor=0.019247876177767378\n",
      "La columna 44 es estadisticamente diferente para alfa=0.1 y p-valor=0.031791225221398246\n",
      "La columna 45 es estadisticamente diferente para alfa=0.1 y p-valor=1.2330370549380151e-05\n",
      "La columna 46 es estadisticamente diferente para alfa=0.1 y p-valor=3.7980123924798536e-05\n",
      "La columna 47 es estadisticamente diferente para alfa=0.1 y p-valor=0.02337164000226436\n",
      "La columna 48 es estadisticamente diferente para alfa=0.1 y p-valor=0.012406954746116914\n",
      "La columna 49 es estadisticamente diferente para alfa=0.1 y p-valor=0.0002620552960631748\n",
      "La columna 50 es estadisticamente diferente para alfa=0.1 y p-valor=2.0951261364337596e-05\n",
      "La columna 51 es estadisticamente diferente para alfa=0.1 y p-valor=0.0014030585213874933\n",
      "La columna 52 es estadisticamente diferente para alfa=0.1 y p-valor=6.810029131001573e-05\n",
      "La columna 53 es estadisticamente diferente para alfa=0.1 y p-valor=0.003178644329407479\n",
      "La columna 54 es estadisticamente diferente para alfa=0.1 y p-valor=1.0210545400974304e-05\n",
      "La columna 55 es estadisticamente diferente para alfa=0.1 y p-valor=0.0003017841068042615\n",
      "La columna 56 es estadisticamente diferente para alfa=0.1 y p-valor=6.120157079862686e-05\n",
      "La columna 57 es estadisticamente diferente para alfa=0.1 y p-valor=0.0003628287630449215\n",
      "La columna 58 es estadisticamente diferente para alfa=0.1 y p-valor=0.007604574572618228\n",
      "La columna 59 es estadisticamente diferente para alfa=0.1 y p-valor=6.869014635256504e-05\n",
      "La columna 60 es estadisticamente diferente para alfa=0.1 y p-valor=0.013895280061426006\n",
      "La columna 61 es estadisticamente diferente para alfa=0.1 y p-valor=2.5259005082928402e-05\n",
      "La columna 62 es estadisticamente diferente para alfa=0.1 y p-valor=0.0001786718608694777\n",
      "La columna 63 es estadisticamente diferente para alfa=0.1 y p-valor=0.00020105900419390652\n",
      "La columna 64 es estadisticamente diferente para alfa=0.1 y p-valor=0.0004687876258559973\n",
      "La columna 65 es estadisticamente diferente para alfa=0.1 y p-valor=0.002424021424328542\n",
      "La columna 66 es estadisticamente diferente para alfa=0.1 y p-valor=0.0012088948397640752\n",
      "La columna 67 es estadisticamente diferente para alfa=0.1 y p-valor=0.03537260792619573\n",
      "La columna 68 es estadisticamente diferente para alfa=0.1 y p-valor=0.0001780488913016485\n",
      "La columna 69 es estadisticamente diferente para alfa=0.1 y p-valor=0.00043786111950929385\n",
      "La columna 70 es estadisticamente diferente para alfa=0.1 y p-valor=0.0006951658225582343\n",
      "La columna 71 es estadisticamente diferente para alfa=0.1 y p-valor=0.00022242432786259854\n",
      "La columna 72 es estadisticamente diferente para alfa=0.1 y p-valor=0.015436996672373282\n",
      "La columna 73 es estadisticamente diferente para alfa=0.1 y p-valor=9.443272833664962e-05\n",
      "La columna 74 es estadisticamente diferente para alfa=0.1 y p-valor=0.0026950471480925407\n",
      "La columna 75 es estadisticamente diferente para alfa=0.1 y p-valor=0.001460161770837082\n",
      "La columna 76 es estadisticamente diferente para alfa=0.1 y p-valor=0.0012725509146478463\n",
      "La columna 77 es estadisticamente diferente para alfa=0.1 y p-valor=0.0012739139564798291\n",
      "La columna 78 es estadisticamente diferente para alfa=0.1 y p-valor=1.380693032583835e-05\n",
      "La columna 79 es estadisticamente diferente para alfa=0.1 y p-valor=0.010431088673392415\n",
      "La columna 80 es estadisticamente diferente para alfa=0.1 y p-valor=0.03574845432397989\n",
      "La columna 81 es estadisticamente diferente para alfa=0.1 y p-valor=0.00038276775130000463\n",
      "La columna 82 es estadisticamente diferente para alfa=0.1 y p-valor=0.019170810090286667\n",
      "La columna 83 es estadisticamente diferente para alfa=0.1 y p-valor=0.0021952181884918793\n",
      "La columna 84 es estadisticamente diferente para alfa=0.1 y p-valor=0.000743453878703937\n",
      "La columna 85 es estadisticamente diferente para alfa=0.1 y p-valor=0.04608568391937338\n",
      "La columna 86 es estadisticamente diferente para alfa=0.1 y p-valor=0.041043552168151164\n",
      "La columna 87 es estadisticamente diferente para alfa=0.1 y p-valor=0.0049721201759872075\n",
      "La columna 88 es estadisticamente diferente para alfa=0.1 y p-valor=4.746335936506911e-05\n",
      "La columna 89 es estadisticamente diferente para alfa=0.1 y p-valor=0.0005323924800928607\n",
      "La columna 90 es estadisticamente diferente para alfa=0.1 y p-valor=0.0018935157079050025\n",
      "La columna 91 es estadisticamente diferente para alfa=0.1 y p-valor=9.150521436767209e-05\n",
      "La columna 92 es estadisticamente diferente para alfa=0.1 y p-valor=5.8021138600771755e-06\n",
      "La columna 93 es estadisticamente diferente para alfa=0.1 y p-valor=0.00047755023490620867\n",
      "La columna 94 es estadisticamente diferente para alfa=0.1 y p-valor=0.0018233598896186581\n",
      "La columna 95 es estadisticamente diferente para alfa=0.1 y p-valor=0.0038655092583066973\n",
      "La columna 96 es estadisticamente diferente para alfa=0.1 y p-valor=0.0002534647027815455\n",
      "La columna 97 es estadisticamente diferente para alfa=0.1 y p-valor=1.715842181273524e-05\n",
      "La columna 98 es estadisticamente diferente para alfa=0.1 y p-valor=0.004026280327700301\n",
      "La columna 99 es estadisticamente diferente para alfa=0.1 y p-valor=9.382676531536942e-05\n",
      "El total de columnas diferentes es 100, que es un 100.0%.\n"
     ]
    }
   ],
   "source": [
    "#ahora vamos a crear otro df, pero usando una distribucion no normal. Vamos a utilizar chi cuadrado:\n",
    "\n",
    "df2 = pd.DataFrame([np.random.chisquare(df=1, size=100) for x in range (100)])\n",
    "test_columns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "#ahora vemos que todas las columnas son estadisticamente diferentes, con un nivel de confianza de 0.1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Other Forms of Structured Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Video explicativo de distintas maneras de almacenar y ver datos."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
